/*
 * This Spock specification was generated by the Gradle 'init' task.
 */
import spock.lang.Specification

class StringCalculatorTest extends Specification {
    def "Testing an empty string should return cero"() {
        setup:
        def sc = new StringCalculator()

        when:
        def result = sc.add("")

        then:
        result == 0
    }

    def "Testing one number, should return the same number"() {
        setup:
        def sc = new StringCalculator()

        when:
        def result = sc.add(string)

        then:
        result == sameNumber

        where:
        string ||  sameNumber
        "1"	   ||  1
        "3"	   ||  3 
        "7"	   ||  7
    }

    def "Testing two numbers, should return the sum of numbers"() {
        setup:
        def sc = new StringCalculator()

        when:
        def result = sc.add(string)

        then:
        result == sumNumbers

        where:
        string     ||  sumNumbers
        "1,2"	   ||  3
        "3,4"	   ||  7 
        "7,8"	   ||  15
    }

    def "Testing any numbers, should return the sum of numbers"() {
        setup:
        def sc = new StringCalculator()

        when:
        def result = sc.add(string)

        then:
        result == sumNumbers

        where:
        string     					  ||  sumNumbers
        "1,2,3"	                      ||  6
        "3,4,5,6,7,8"	              ||  33 
        "1,1,1,1,1,1,1,1,1,1,1,1,1,1" ||  14
    }

    def "Testing any numbers with new lines between them, should return the sum of numbers"() {
        setup:
        def sc = new StringCalculator()

        when:
        def result = sc.add(string)

        then:
        result == sumNumbers

        where:
        string     					  		||  sumNumbers
        "1,2\n3"                      		||  6
        "3\n4,5\n6,7\n8"              		||  33 
        "1\n1\n1\n1\n1,1,1,1,1,1\n1,1\n1,1" ||  14
    }

    def "Testing any numbers with new lines between them, should return the sum of numbers"() {
        setup:
        def sc = new StringCalculator()

        when:
        def result = sc.add(string)

        then:
        result == sumNumbers

        where:
        string     					  		||  sumNumbers
        "//;\n1;2;3"                      	||  6
        "//#\n3#4#5#6#7#8"             		||  33 
        "//|\n1|1|1|1|1|1|1|1|1|1|1|1|1|1"  ||  14
    }

    def "Testing negative numbers in the string, should return message error"() {
        setup:
        def sc = new StringCalculator()
        InvalidDeviceException ex = thrown()

        given:
        sc.add("1,2,3,-4,5,6") >> { throw new IllegalArgumentException() }

        when:
        def result = sc.add(string)

        then:
        result == exceptions

        where:
        string     	  		||  exceptions
        "1,2,3,-4,5,6"      ||  ex.message == 'negatives not allowed -4'
        "1,-2,3,-4,5,-6"  	||  ex.message == 'negatives not allowed -2 -4 -6'

            
    }

}
